{"version":3,"file":"static/js/828.09c7d82c.chunk.js","mappings":"mZAOA,MAAMA,EAAe,GACfC,EAAoB,E,aCuB1B,SAASC,EAAyBC,GAW9B,IAX+B,OACjCC,EAAM,WACNC,EAAU,OACVC,EAAM,OACNC,EAAM,SACNC,EAAQ,YACRC,EAAW,OACXC,EAAM,gBACNC,EAAe,YACfC,EAAW,cACXC,GACDV,EACC,MAAMW,GAA2BC,EAAAA,EAAAA,QAAO,MAElCC,GAAaC,EAAAA,EAAAA,cAAY,KACxBX,EAGHF,EAAOc,gBAAgBC,EAAAA,oBAAqB,MAF5Cf,EAAOc,gBAAgBC,EAAAA,oBAAqB,WAG9C,GACC,CAACf,EAAQE,IAQZ,IAAIc,EAAkB,CAACC,EAAG,EAAGC,EAAG,GAEhC,SAASC,EAAkBC,GACzBJ,EAAkB,CAACC,EAAGG,EAAEC,QAASH,EAAGE,EAAEE,QACxC,CAEA,SAASC,EAAkBH,GACzB,GAC0B,OAAxBV,QAAwB,IAAxBA,GAAAA,EAA0Bc,UACX,IAAdJ,EAAEK,SAA+B,IAAdL,EAAEK,SACtB,CACsBC,KAAKC,KACzBD,KAAKE,IAAIR,EAAEC,QAAUL,EAAgBC,EAAG,GACtCS,KAAKE,IAAIR,EAAEE,QAAUN,EAAgBE,EAAG,IAftB,IAmBpBR,EAAyBc,QAAQK,MAAMC,cAAgB,OAE3D,CACF,CAEA,SAASC,EAAgBX,GACK,OAAxBV,QAAwB,IAAxBA,GAAAA,EAA0Bc,UAC5Bd,EAAyBc,QAAQK,MAAMC,cAAgB,OAE3D,EAEAE,EAAAA,EAAAA,YAAU,KACR,GAA4B,OAAxBtB,QAAwB,IAAxBA,GAAAA,EAA0Bc,QAK5B,OAJAS,SAASC,iBAAiB,YAAaf,GACvCc,SAASC,iBAAiB,YAAaX,GACvCU,SAASC,iBAAiB,UAAWH,GAE9B,KACLE,SAASE,oBAAoB,YAAahB,GAC1Cc,SAASE,oBAAoB,YAAaZ,GAC1CU,SAASE,oBAAoB,UAAWJ,EAAgB,CAE5D,GACC,CAACrB,IAEJ,MAAM0B,GAAkCvB,EAAAA,EAAAA,cAAY,KAClD,MAAMwB,GAAYC,EAAAA,EAAAA,iBAEZC,EAA4B7B,EAAyBc,QACrDgB,EAAkBC,OAAOC,eAE/B,GAAkC,OAA9BH,EACF,OAGF,MAAMI,EAAc3C,EAAO4C,iBAC3B,GACgB,OAAdP,GACoB,OAApBG,IACCA,EAAgBK,aACD,OAAhBF,GACAA,EAAYG,SAASN,EAAgBO,YACrC,CACA,MAAMC,EChHL,SACLR,EACAG,GAEA,MAAMM,EAAWT,EAAgBU,WAAW,GAE5C,IAAIC,EAEJ,GAAIX,EAAgBO,aAAeJ,EAAa,CAC9C,IAAIS,EAAQT,EACZ,KAAkC,MAA3BS,EAAMC,mBACXD,EAAQA,EAAMC,kBAEhBF,EAAOC,EAAME,uBACf,MACEH,EAAOF,EAASK,wBAGlB,OAAOH,CACT,CD6FwBI,CAAgBf,EAAiBG,ID7GlD,SACLa,EACAC,EACAxD,GAGC,IAFDyD,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG/D,EACdkE,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG9D,EAEnB,MAAMkE,EAAe9D,EAAW+D,cAEhC,GAAmB,OAAfR,IAAwBO,EAG1B,OAFAN,EAAa5B,MAAMoC,QAAU,SAC7BR,EAAa5B,MAAMqC,UAAY,iCAIjC,MAAMC,EAAmBV,EAAaH,wBAChCc,EAAoBnE,EAAWqD,wBAC/Be,EAAqBN,EAAaT,wBAExC,IAAIgB,EAAMd,EAAWc,IAAMH,EAAiBI,OAASb,EACjDc,EAAOhB,EAAWgB,KAAOV,EAEzBQ,EAAMD,EAAmBC,MAC3BA,GAAOH,EAAiBI,OAASf,EAAWe,OAAuB,EAAdb,GAGnDc,EAAOL,EAAiBM,MAAQJ,EAAmBK,QACrDF,EAAOH,EAAmBK,MAAQP,EAAiBM,MAAQX,GAG7DQ,GAAOF,EAAkBE,IACzBE,GAAQJ,EAAkBI,KAE1Bf,EAAa5B,MAAMoC,QAAU,IAC7BR,EAAa5B,MAAMqC,UAAS,aAAAS,OAAgBH,EAAI,QAAAG,OAAOL,EAAG,MAC5D,CC4EMM,CAAwB5B,EAAWT,EAA2BtC,EAChE,IACC,CAACD,EAAQC,IA8CZ,OA5CA+B,EAAAA,EAAAA,YAAU,KACR,MAAM+B,EAAe9D,EAAW+D,cAE1Ba,EAASA,KACb7E,EAAO8E,iBAAiBC,MAAK,KAC3B3C,GAAiC,GACjC,EAQJ,OALAK,OAAOP,iBAAiB,SAAU2C,GAC9Bd,GACFA,EAAa7B,iBAAiB,SAAU2C,GAGnC,KACLpC,OAAON,oBAAoB,SAAU0C,GACjCd,GACFA,EAAa5B,oBAAoB,SAAU0C,EAC7C,CACD,GACA,CAAC7E,EAAQoC,EAAiCnC,KAE7C+B,EAAAA,EAAAA,YAAU,KACRhC,EAAO8E,iBAAiBC,MAAK,KAC3B3C,GAAiC,KAE5B4C,EAAAA,EAAAA,eACLhF,EAAOiF,wBAAuBC,IAAoB,IAAnB,YAACC,GAAYD,EAC1CC,EAAYJ,MAAK,KACf3C,GAAiC,GACjC,IAGJpC,EAAOoF,gBACLC,EAAAA,0BACA,KACEjD,KACO,IAETkD,EAAAA,yBAGH,CAACtF,EAAQoC,KAGVmD,EAAAA,EAAAA,KAAA,OAAKC,IAAK9E,EAA0B+E,UAAU,6BAA4BC,SACvE1F,EAAO2F,eACNC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACEH,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,OAAO,EAErDN,UAAW,sBAAwBtF,EAAS,SAAW,IACvD,aAAW,sBAAqBuF,UAChCH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mBAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,SAAS,EAEvDN,UAAW,sBAAwBrF,EAAW,SAAW,IACzD,aAAW,yBAAwBsF,UACnCH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,YAAY,EAE1DN,UAAW,sBAAwBpF,EAAc,SAAW,IAC5D,aAAW,4BAA2BqF,UACtCH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wBAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,gBAAgB,EAE9DN,UAAW,sBAAwBlF,EAAkB,SAAW,IAChE,aAAW,mCAAkCmF,UAC7CH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,4BAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,YAAY,EAE1DN,UAAW,sBAAwBjF,EAAc,SAAW,IAC5DwF,MAAM,YACN,aAAW,mBAAkBN,UAC7BH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wBAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,cAAc,EAE5DN,UAAW,sBAAwBhF,EAAgB,SAAW,IAC9DuF,MAAM,cACN,aAAW,qBAAoBN,UAC/BH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,0BAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASA,KACP9F,EAAOc,gBAAgBiF,EAAAA,oBAAqB,OAAO,EAErDN,UAAW,sBAAwBnF,EAAS,SAAW,IACvD,aAAW,oBAAmBoF,UAC9BH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mBAEfF,EAAAA,EAAAA,KAAA,UACEO,QAASlF,EACT6E,UAAW,sBAAwBvF,EAAS,SAAW,IACvD,aAAW,cAAawF,UACxBH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAYzB,CAqHe,SAASQ,EAA+BC,GAEnD,IAFoD,WACtDjG,EAAagC,SAASkE,MACvBD,EACC,MAAOlG,IAAUoG,EAAAA,EAAAA,6BACjB,OAvHF,SACEpG,EACAC,GAEA,MAAOoG,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BrG,EAAQsG,IAAaD,EAAAA,EAAAA,WAAS,IAC9BpG,EAAQsG,IAAaF,EAAAA,EAAAA,WAAS,IAC9BnG,EAAUsG,IAAeH,EAAAA,EAAAA,WAAS,IAClClG,EAAasG,IAAkBJ,EAAAA,EAAAA,WAAS,IACxChG,EAAiBqG,IAAsBL,EAAAA,EAAAA,WAAS,IAChD/F,EAAaqG,IAAkBN,EAAAA,EAAAA,WAAS,IACxC9F,EAAeqG,IAAoBP,EAAAA,EAAAA,WAAS,IAC5CjG,EAAQyG,IAAaR,EAAAA,EAAAA,WAAS,GAE/BS,GAAcnG,EAAAA,EAAAA,cAAY,KAC9Bb,EAAO8E,iBAAiBC,MAAK,KAE3B,GAAI/E,EAAOiH,cACT,OAEF,MAAM5E,GAAYC,EAAAA,EAAAA,iBACZE,EAAkBC,OAAOC,eACzBC,EAAc3C,EAAO4C,iBAE3B,GACsB,OAApBJ,MACE0E,EAAAA,EAAAA,mBAAkB7E,IACF,OAAhBM,IACCA,EAAYG,SAASN,EAAgBO,aAGxC,YADAuD,GAAU,GAIZ,KAAKY,EAAAA,EAAAA,mBAAkB7E,GACrB,OAGF,MAAM8E,GAAOC,EAAAA,EAAAA,GAAgB/E,GAG7BoE,EAAUpE,EAAUgF,UAAU,SAC9BX,EAAYrE,EAAUgF,UAAU,WAChCV,EAAetE,EAAUgF,UAAU,cACnCT,EAAmBvE,EAAUgF,UAAU,kBACvCR,EAAexE,EAAUgF,UAAU,cACnCP,EAAiBzE,EAAUgF,UAAU,gBACrCN,EAAU1E,EAAUgF,UAAU,SAG9B,MAAMC,EAASH,EAAKI,aAChBC,EAAAA,EAAAA,aAAYF,KAAWE,EAAAA,EAAAA,aAAYL,GACrCX,GAAU,GAEVA,GAAU,IAITiB,EAAAA,EAAAA,sBAAqBpF,EAAUqF,OAAOC,YACR,KAA/BtF,EAAUuF,iBAIVtB,GAAU,GAFVA,GAAUuB,EAAAA,EAAAA,aAAYV,IAKxB,MAAMW,EAAiBzF,EAAUuF,iBAAiBG,QAAQ,MAAO,IAC5D1F,EAAUQ,eAAoC,KAAnBiF,GAC9BxB,GAAU,EAEZ,GACA,GACD,CAACtG,IAsBJ,OApBAgC,EAAAA,EAAAA,YAAU,KACRC,SAASC,iBAAiB,kBAAmB8E,GACtC,KACL/E,SAASE,oBAAoB,kBAAmB6E,EAAY,IAE7D,CAACA,KAEJhF,EAAAA,EAAAA,YAAU,KACDgD,EAAAA,EAAAA,eACLhF,EAAOiF,wBAAuB,KAC5B+B,GAAa,IAEfhH,EAAOgI,sBAAqB,KACM,OAA5BhI,EAAO4C,kBACT0D,GAAU,EACZ,MAGH,CAACtG,EAAQgH,KAEPX,GAAUnG,EACN,MAGF+H,EAAAA,EAAAA,eACL1C,EAAAA,EAAAA,KAACzF,EAAyB,CACxBE,OAAQA,EACRC,WAAYA,EACZC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,EACVG,gBAAiBA,EACjBC,YAAaA,EACbC,cAAeA,EACfJ,YAAaA,EACbC,OAAQA,IAEVL,EAEJ,CAMSiI,CAA6BlI,EAAQC,EAC9C,CEjUE,MAAMkI,EAAa,IAAIC,IAevB,SAASC,EAAStI,GAQd,IARe,QACjBuI,EAAO,UACP7C,EAAS,SACT8C,EAAQ,IACRC,EAAG,MACH/D,EAAK,OACLF,EAAM,SACNkE,GACD1I,EAEC,OAvBF,SAA0ByI,GACxB,IAAKL,EAAWO,IAAIF,GAClB,MAAM,IAAIG,SAASC,IACjB,MAAMC,EAAM,IAAIC,MAChBD,EAAIL,IAAMA,EACVK,EAAIE,OAAS,KACXZ,EAAWa,IAAIR,GACfI,EAAQ,KAAK,CACd,GAGP,CAWEK,CAAiBT,IAEfjD,EAAAA,EAAAA,KAAA,OACEE,UAAWA,QAAa5B,EACxB2E,IAAKA,EACLU,IAAKZ,EACL9C,IAAK+C,EACL,gBAAeE,EACf5G,MAAO,CACL0C,SACAE,QACA0E,QAAS,SAEXC,UAAU,SAGhB,CAEO,SAASC,EAAuBnE,GAInC,IAJoC,aACtCoE,EAAY,QACZC,EAAO,QACPC,GACDtE,EACC,MACMiC,EADcmC,EAAaxE,iBACRC,MAAK,KAAM0E,EAAAA,EAAAA,eAAcF,MAC3CjB,EAASoB,IAAcnD,EAAAA,EAAAA,UAASY,EAAKwC,eACrCC,EAAaC,IAAkBtD,EAAAA,EAAAA,UAASY,EAAK2C,mBAC7CrB,EAAUsB,IAAexD,EAAAA,EAAAA,UAASY,EAAK6C,eAkB9C,OACEpE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAK1D,MAAO,CAACoI,aAAc,OAAOvE,UAChCH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CACRC,MAAM,WACNC,YAAY,+BACZC,SAAUX,EACVY,MAAOhC,EACP,eAAa,kCAIjB1C,EAAAA,EAAAA,MAAC2E,EAAAA,EAAM,CAAC1I,MAAO,CAACoI,aAAc,MAAOxF,MAAO,SAAU6F,MAAO7B,EAAU0B,MAAM,WAAWK,KAAK,WAAWC,GAAG,kBAAkBJ,SAxBnGjJ,IAC5B2I,EAAY3I,EAAEsJ,OAAOJ,MAAM,EAuBmI5E,SAAA,EAC1JH,EAAAA,EAAAA,KAAA,UAAQ+E,MAAM,OAAM5E,SAAC,UACrBH,EAAAA,EAAAA,KAAA,UAAQ+E,MAAM,QAAO5E,SAAC,WACtBH,EAAAA,EAAAA,KAAA,UAAQ+E,MAAM,OAAM5E,SAAC,mBAGvBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,SAAOkF,GAAG,UAAUE,KAAK,WAAWC,QAAShB,EAAaS,SAnC/BjJ,IAC/ByI,EAAezI,EAAEsJ,OAAOE,QAAQ,KAmC5BrF,EAAAA,EAAAA,KAAA,SAAOsF,QAAQ,UAASnF,SAAC,qBAG3BH,EAAAA,EAAAA,KAACuF,EAAAA,EAAa,CAAApF,UACZH,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACL,eAAa,8BACbjF,QAASA,IAlCOkF,MACtB,MAAMC,EAAU,CAAC3C,UAASsB,cAAanB,YACpCtB,GACDmC,EAAazE,QAAO,KAAQsC,EAAKtC,OAAOoG,EAAQ,IAElDzB,GAAS,EA6BYwB,GAAkBtF,SAAC,gBAM5C,CAEe,SAASwF,EAAoBhF,GASxC,IATyC,IAC3CsC,EAAG,QACHF,EAAO,QACPiB,EAAO,MACP9E,EAAK,OACLF,EAAM,YACNqF,EAAW,QACXuB,EAAO,SACP1C,GACDvC,EACC,MAAOkF,EAAOC,IAAaC,EAAAA,EAAAA,KACrB/C,GAAW5H,EAAAA,EAAAA,QAAO,MAClB4K,GAAY5K,EAAAA,EAAAA,QAAO,OAClB6K,EAAYC,EAAaC,IAC9BC,EAAAA,EAAAA,yBAAwBpC,IACnBvJ,IAAUoG,EAAAA,EAAAA,8BACV/D,EAAWuJ,IAAgBrF,EAAAA,EAAAA,UAAS,MACrCsF,GAAkBlL,EAAAA,EAAAA,QAAO,MAEzBmL,GAAWjL,EAAAA,EAAAA,cACdoK,IACC,GAAIO,IAAcO,EAAAA,EAAAA,mBAAiBzJ,EAAAA,EAAAA,kBAAkB,CACrC2I,EACRe,iBACN,MAAM7E,GAAOsC,EAAAA,EAAAA,eAAcF,IACvB0C,EAAAA,EAAAA,IAAmB9E,KACjB,OAAJA,QAAI,IAAJA,GAAAA,EAAM+E,UAERT,GAAY,EACd,CACA,OAAO,CAAK,GAEd,CAACD,EAAYjC,EAASkC,IAGlBU,GAAUtL,EAAAA,EAAAA,cACbuL,IACC,MAAMC,GAAkB/J,EAAAA,EAAAA,iBAClBgK,EAAaf,EAAU/J,QAC7B,GACEgK,IACAO,EAAAA,EAAAA,kBAAiBM,IACqB,IAAtCA,EAAgBE,WAAW3I,OAC3B,CACA,GAAIgG,EAKF,OAHA4C,EAAAA,EAAAA,eAAc,MACdJ,EAAMJ,iBACNb,EAAQsB,SACD,EACF,GACU,OAAfH,GACAA,IAAerK,SAASyK,cAIxB,OAFAN,EAAMJ,iBACNM,EAAWG,SACJ,CAEX,CACA,OAAO,CAAK,GAEd,CAACtB,EAASK,EAAY5B,IAGlB+C,GAAW9L,EAAAA,EAAAA,cACduL,IAEGP,EAAgBrK,UAAY2J,GAC5BI,EAAU/J,UAAY4K,EAAM1B,WAE5B8B,EAAAA,EAAAA,eAAc,MACdxM,EAAO6E,QAAO,KACZ4G,GAAY,GACZ,MAAMmB,EAAoB5M,EAAO4C,iBACP,OAAtBgK,GACFA,EAAkBH,OACpB,KAEK,IAIX,CAACtB,EAASnL,EAAQyL,KAGpBzJ,EAAAA,EAAAA,YAAU,KACR,IAAI6K,GAAY,EAChB,MAAMC,GAAa9H,EAAAA,EAAAA,eACjBhF,EAAOiF,wBAAuB8H,IAAoB,IAAnB,YAAC5H,GAAY4H,EACtCF,GACFjB,EAAazG,EAAYJ,MAAK,KAAMzC,EAAAA,EAAAA,mBACtC,IAEFtC,EAAOoF,gBACLC,EAAAA,0BACA,CAAC2H,EAAG1D,KACFuC,EAAgBrK,QAAU8H,GACnB,IAEThE,EAAAA,sBAEFtF,EAAOoF,gBACL6H,EAAAA,eACChC,IACC,MAAMmB,EAAQnB,EACd,OAAImB,EAAM1B,SAAWnC,EAAS/G,UACxB4K,EAAMc,SACRzB,GAAaD,IAEbE,IACAD,GAAY,KAEP,EAGG,GAEdnG,EAAAA,sBAEFtF,EAAOoF,gBACL+H,EAAAA,mBACCf,GACKA,EAAM1B,SAAWnC,EAAS/G,UAG5B4K,EAAMJ,kBACC,IAIX1G,EAAAA,sBAEFtF,EAAOoF,gBACLgI,EAAAA,mBACAtB,EACAxG,EAAAA,sBAEFtF,EAAOoF,gBACLiI,EAAAA,sBACAvB,EACAxG,EAAAA,sBAEFtF,EAAOoF,gBAAgBkI,EAAAA,kBAAmBnB,EAAS7G,EAAAA,sBACnDtF,EAAOoF,gBACLmI,EAAAA,mBACAZ,EACArH,EAAAA,uBAGJ,MAAO,KACLuH,GAAY,EACZC,GAAY,CACb,GACA,CACDpB,EACA1L,EACAwL,EACAjC,EACAuC,EACAK,EACAQ,EACAlB,IAGF,MAAMrC,EAAYoC,IAAcO,EAAAA,EAAAA,kBAAiB1J,GAC3CmL,EAAYhC,EAClB,OACE5F,EAAAA,EAAAA,MAAC6H,EAAAA,SAAQ,CAACC,SAAU,KAAKhI,SAAA,EACvBE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACEE,EAAAA,EAAAA,MAAA,OAAKwD,UAAWA,EAAU1D,SAAA,EACxBH,EAAAA,EAAAA,KAAA,UACEE,UAAU,oBACVD,IAAK+F,EACLzF,QAASA,KACPuF,EAAU,uBAAwB7B,IAChCjE,EAAAA,EAAAA,KAAC8D,EAAuB,CACtBC,aAActJ,EACduJ,QAASA,EACTC,QAASA,KAEX,EACF9D,SAAC,UAGLH,EAAAA,EAAAA,KAAC8C,EAAS,CACR5C,UACE+H,EAAS,WAAA7I,QACMoH,EAAAA,EAAAA,kBAAiB1J,GAAa,YAAc,IACvD,KAENmG,IAAKA,EACLF,QAASA,EACTC,SAAUA,EACV9D,MAAOA,EACPF,OAAQA,EACRkE,SAAUA,OAGbmB,IACCrE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,0BAAyBC,UACtCE,EAAAA,EAAAA,MAAC+H,EAAAA,sBAAqB,CAACC,cAAezC,EAAQzF,SAAA,EAC5CH,EAAAA,EAAAA,KAACsI,EAAAA,gBAAe,KAChBtI,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,KACXvI,EAAAA,EAAAA,KAACwI,EAAAA,EAAwB,KACzBxI,EAAAA,EAAAA,KAACU,EAA+B,KAChCV,EAAAA,EAAAA,KAACyI,EAAAA,eAAc,CACbC,iBACE1I,EAAAA,EAAAA,KAAC2I,EAAAA,EAAe,CAACzI,UAAU,qCAE7B2E,aACE7E,EAAAA,EAAAA,KAAC4I,EAAAA,EAAW,CAAC1I,UAAU,+BAA8BC,SAAC,uBAIxD0I,cAAeC,cAMxBjD,IAGP,C,iBC/WF,MAAMkD,EAA+GC,EAAQ,MAC7HC,EAAOC,QAAUH,C,iBCFJ,IAAIlN,EAAEmN,EAAQ,MAAyCG,EAAEH,EAAQ,MAASE,EAAQZ,gBAAgB,SAAA9N,GAA8B,IAApB4O,iBAAiBC,GAAE7O,GAAO8O,GAAGzN,EAAEgF,4BAA0M,OAA9KsI,EAAE1M,WAAU,KAAK6M,EAAEpC,OAAM,KAAK,IAAIqC,EAAE7M,SAASyK,cAAcqC,EAAEF,EAAEjM,iBAAiB,OAAOmM,GAAG,OAAOD,GAAGC,EAAEjM,SAASgM,IAAIC,EAAEtC,MAAM,CAACuC,eAAc,GAAI,GAAE,CAACL,iBAAiBC,GAAG,GAAE,CAACA,EAAEC,IAAW,IAAI,C,iBCC7W,MAAMI,EAAyHV,EAAQ,MACvIC,EAAOC,QAAUQ,C,iBCFJ,IAAIF,EAAER,EAAQ,MAC3B,IAAIK,EAAE,CAAC,CAAC,MAAM,mBAAmB,CAAC,MAAM,kBAAkB,CAAC,SAAS,kBAAkB,CAAC,OAAO,kBAAkB,CAAC,MAAM,mBAAmB,CAAC,WAAW,iBAAiB,CAAC,SAAS,kBAAkB,CAAC,WAAW,mBAAmB,CAAC,OAAO,oBAAoB,CAAC,QAAQ,kBAAkB,CAAC,UAAU,kBAAkB,CAAC,QAAQ,kBAAkB,CAAC,OAAO,oBAAoB,CAAC,MAAM,oBAAoB,CAAC,OAAO,oBAAoB,CAAC,QAAQ,qBAAqBE,EAAEF,EAAElN,KAAKwN,MAAMxN,KAAKyN,SAASP,EAAEhL,SAASxC,EAAE2N,EAAEK,cAAc,CAACC,SAAS,EACtgBC,MAAMR,EAAE,GAAGS,gBAAe,EAAG/E,KAAKsE,EAAE,GAAGU,UAAU,IAAIC,MAAMhB,EAAQiB,qBAAqBtO,EAAEqN,EAAQkB,wBAAwB,SAASjB,EAAEkB,GAAG,IAAIf,EAAEE,EAAEc,WAAWzO,GAA4C,OAAzC,MAAMsN,IAAIG,EAAErE,KAAKkE,GAAG,MAAMkB,IAAIf,EAAES,MAAMM,GAAUf,CAAC,C,iBCD/M,MAAMlB,EAA6GY,EAAQ,MAC3HC,EAAOC,QAAUd,C,iBCFJ,IAAImB,EAAEP,EAAQ,MAA8CuB,EAAEvB,EAAQ,MAAyCwB,EAAExB,EAAQ,MACtIE,EAAQd,sBAAsB,SAAA5N,GAAuF,IAA7E6N,cAAciB,EAAEnJ,SAASsK,EAAEC,aAAa7O,EAAE8O,aAAaC,EAAEC,iBAAiBC,GAAEtQ,EAAMuQ,EAAEP,EAAEpP,QAAO,GAAI4P,EAAER,EAAEF,WAAWC,EAAEU,wBAAwB,MAAMD,GADzC,SAAW1B,GAAG,IAAImB,EAAE,IAAIS,gBAAgBT,EAAEU,OAAO,OAAO7B,GAAG,IAAI,IAAIzN,EAAE,EAAEA,EAAEuC,UAAUC,OAAOxC,IAAI4O,EAAEU,OAAO,IAAI/M,UAAUvC,IAAI,MAAMuP,MAAM,2BAAAhM,OAA2BkK,EAAC,2CAAAlK,OAA0CqL,EAAC,6BAA4B,wFAAyF,CACrRY,CAAE,GAAG,IAAKlC,GAAGmC,SAASC,IAAIP,EAAErP,EAAE6O,EAAEgB,SAAQ,KAAK,IAAIhC,EAAEoB,GAAGW,UAAK,EAAO,MAAM7P,EAAE6O,EAAEkB,6BAA6BT,EAAExB,GAAqD,QAAlD,IAASA,IAAIF,EAAEoC,QAAQC,MAAMnC,GAAGF,EAAEsC,cAAczC,EAAKtN,EAAE,IAAI,IAAIwN,KAAKxN,EAAE,CAAC,IAAIwO,EAAEb,EAAE,KAAK,oBAAoBH,IAAQA,GAAJgB,EAAEhB,GAAM7G,QAAQgH,EAAEa,EAAEwB,KAAKxB,EAAEA,EAAEyB,WAAW,MAAM,MAAMC,EAAEzC,EAAE0C,OAAOC,IAAI5C,EAAE6C,WAAW5C,EAAE0C,OAAOG,IAAI9C,EAAE6C,UACpf,CAACE,UAAUL,EAAEA,EAAEK,eAAU,EAAOC,MAAMhD,EAAE7G,QAAQgH,EAAE8C,iBAAiBjC,EAAEkC,WAAW,IAAI1J,KAAK,KAAK,CAACwG,EAAEC,EAAE0C,OAAO,IAAI9B,IAAIf,EAAE6C,QAAQ,IAAI,MAAOD,EAAES,KAAKnD,EAAEC,EAAE0C,OAAOG,IAAIJ,EAAE,CAACK,UAAUI,EAAEJ,UAAUC,MAAMG,EAAEH,MAAM7J,QAAQgK,EAAEhK,QAAQ8J,iBAAiBE,EAAEF,iBAAiBC,WAAW,IAAI1J,KAAK,CAAiE,OAAhEyG,EAAEoC,QAAQe,UAAUtD,EAAEuC,QAAQe,UAAUnD,EAAEoD,UAAUvD,EAAEuD,UAAgB,CAACpD,EAAE5N,EAAE,GAAE,KAAKsO,eAAe2C,EAAE1C,UAAU2C,GAAGrD,EAAEa,0BAA0ByC,EAAE/B,GAAGC,EAAE9O,SAAS2Q,EAAEzJ,IAAImG,EAAEwD,UAC1X,OADoYtC,EAAE/N,WAAU,KAAKoQ,IAAI9B,EAAE9O,SAAQ,EAAG,GAAE,CAAC4Q,IAAIrC,EAAE/N,WAAU,IAClf0M,EAAE4D,0BAAyBvD,IAAIF,EAAE0D,YAAYxD,EAAE,KAAG,CAACF,EAAEH,IAAWqB,EAAEyC,cAAc1C,EAAEU,uBAAuBiC,SAAS,CAACnI,MAAMpJ,IAAIgR,GAAGE,EAAEpC,EAAE,KAAK,C","sources":["components/Editor/utils/setFloatingElemPosition.js","components/Editor/plugins/FloatingTextFormatToolbarPlugin/index.js","components/Editor/utils/getDOMRangeRect.js","components/Editor/nodes/InlineImageComponent.js","../node_modules/@lexical/react/LexicalAutoFocusPlugin.js","../node_modules/@lexical/react/LexicalAutoFocusPlugin.prod.js","../node_modules/@lexical/react/LexicalCollaborationContext.js","../node_modules/@lexical/react/LexicalCollaborationContext.prod.js","../node_modules/@lexical/react/LexicalNestedComposer.js","../node_modules/@lexical/react/LexicalNestedComposer.prod.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst VERTICAL_GAP = 10;\nconst HORIZONTAL_OFFSET = 5;\n\nexport function setFloatingElemPosition(\n  targetRect,\n  floatingElem,\n  anchorElem,\n  verticalGap = VERTICAL_GAP,\n  horizontalOffset = HORIZONTAL_OFFSET,\n) {\n  const scrollerElem = anchorElem.parentElement;\n\n  if (targetRect === null || !scrollerElem) {\n    floatingElem.style.opacity = '0';\n    floatingElem.style.transform = 'translate(-10000px, -10000px)';\n    return;\n  }\n\n  const floatingElemRect = floatingElem.getBoundingClientRect();\n  const anchorElementRect = anchorElem.getBoundingClientRect();\n  const editorScrollerRect = scrollerElem.getBoundingClientRect();\n\n  let top = targetRect.top - floatingElemRect.height - verticalGap;\n  let left = targetRect.left - horizontalOffset;\n\n  if (top < editorScrollerRect.top) {\n    top += floatingElemRect.height + targetRect.height + verticalGap * 2;\n  }\n\n  if (left + floatingElemRect.width > editorScrollerRect.right) {\n    left = editorScrollerRect.right - floatingElemRect.width - horizontalOffset;\n  }\n\n  top -= anchorElementRect.top;\n  left -= anchorElementRect.left;\n\n  floatingElem.style.opacity = '1';\n  floatingElem.style.transform = `translate(${left}px, ${top}px)`;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport './index.css'\n\nimport {$isCodeHighlightNode} from '@lexical/code'\nimport {$isLinkNode, TOGGLE_LINK_COMMAND} from '@lexical/link'\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext'\nimport {mergeRegister} from '@lexical/utils'\nimport {\n  $getSelection,\n  $isRangeSelection,\n  $isTextNode,\n  COMMAND_PRIORITY_LOW,\n  FORMAT_TEXT_COMMAND,\n  LexicalEditor,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical'\nimport {useCallback, useEffect, useRef, useState} from 'react'\nimport {createPortal} from 'react-dom'\n\nimport {getDOMRangeRect} from '../../utils/getDOMRangeRect'\nimport {getSelectedNode} from '../../utils/getSelectedNode'\nimport {setFloatingElemPosition} from '../../utils/setFloatingElemPosition'\n// import {INSERT_INLINE_COMMAND} from '../CommentPlugin'\n\nfunction TextFormatFloatingToolbar({\n  editor,\n  anchorElem,\n  isLink,\n  isBold,\n  isItalic,\n  isUnderline,\n  isCode,\n  isStrikethrough,\n  isSubscript,\n  isSuperscript,\n}) {\n  const popupCharStylesEditorRef = useRef(null)\n\n  const insertLink = useCallback(() => {\n    if (!isLink) {\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, 'https://')\n    } else {\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, null)\n    }\n  }, [editor, isLink])\n\n  // const insertComment = () => {\n  //   editor.dispatchCommand(INSERT_INLINE_COMMAND, undefined)\n  // }\n\n  const movementThreshold = 5 // Set a threshold for minimum movement in pixels\n\n  let initialPosition = {x: 0, y: 0}\n\n  function mouseDownListener(e) {\n    initialPosition = {x: e.clientX, y: e.clientY}\n  }\n\n  function mouseMoveListener(e) {\n    if (\n      popupCharStylesEditorRef?.current &&\n      (e.buttons === 1 || e.buttons === 3)\n    ) {\n      const distanceMoved = Math.sqrt(\n        Math.pow(e.clientX - initialPosition.x, 2) +\n          Math.pow(e.clientY - initialPosition.y, 2),\n      )\n\n      if (distanceMoved > movementThreshold) {\n        popupCharStylesEditorRef.current.style.pointerEvents = 'none'\n      }\n    }\n  }\n\n  function mouseUpListener(e) {\n    if (popupCharStylesEditorRef?.current) {\n      popupCharStylesEditorRef.current.style.pointerEvents = 'auto'\n    }\n  }\n\n  useEffect(() => {\n    if (popupCharStylesEditorRef?.current) {\n      document.addEventListener('mousedown', mouseDownListener)\n      document.addEventListener('mousemove', mouseMoveListener)\n      document.addEventListener('mouseup', mouseUpListener)\n\n      return () => {\n        document.removeEventListener('mousedown', mouseDownListener)\n        document.removeEventListener('mousemove', mouseMoveListener)\n        document.removeEventListener('mouseup', mouseUpListener)\n      }\n    }\n  }, [popupCharStylesEditorRef])\n\n  const updateTextFormatFloatingToolbar = useCallback(() => {\n    const selection = $getSelection()\n\n    const popupCharStylesEditorElem = popupCharStylesEditorRef.current\n    const nativeSelection = window.getSelection()\n\n    if (popupCharStylesEditorElem === null) {\n      return\n    }\n\n    const rootElement = editor.getRootElement()\n    if (\n      selection !== null &&\n      nativeSelection !== null &&\n      !nativeSelection.isCollapsed &&\n      rootElement !== null &&\n      rootElement.contains(nativeSelection.anchorNode)\n    ) {\n      const rangeRect = getDOMRangeRect(nativeSelection, rootElement)\n\n      setFloatingElemPosition(rangeRect, popupCharStylesEditorElem, anchorElem)\n    }\n  }, [editor, anchorElem])\n\n  useEffect(() => {\n    const scrollerElem = anchorElem.parentElement\n\n    const update = () => {\n      editor.getEditorState().read(() => {\n        updateTextFormatFloatingToolbar()\n      })\n    }\n\n    window.addEventListener('resize', update)\n    if (scrollerElem) {\n      scrollerElem.addEventListener('scroll', update)\n    }\n\n    return () => {\n      window.removeEventListener('resize', update)\n      if (scrollerElem) {\n        scrollerElem.removeEventListener('scroll', update)\n      }\n    }\n  }, [editor, updateTextFormatFloatingToolbar, anchorElem])\n\n  useEffect(() => {\n    editor.getEditorState().read(() => {\n      updateTextFormatFloatingToolbar()\n    })\n    return mergeRegister(\n      editor.registerUpdateListener(({editorState}) => {\n        editorState.read(() => {\n          updateTextFormatFloatingToolbar()\n        })\n      }),\n\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        () => {\n          updateTextFormatFloatingToolbar()\n          return false\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n    )\n  }, [editor, updateTextFormatFloatingToolbar])\n\n  return (\n    <div ref={popupCharStylesEditorRef} className=\"floating-text-format-popup\">\n      {editor.isEditable() && (\n        <>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold')\n            }}\n            className={'popup-item spaced ' + (isBold ? 'active' : '')}\n            aria-label=\"Format text as bold\">\n            <i className=\"format bold\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic')\n            }}\n            className={'popup-item spaced ' + (isItalic ? 'active' : '')}\n            aria-label=\"Format text as italics\">\n            <i className=\"format italic\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline')\n            }}\n            className={'popup-item spaced ' + (isUnderline ? 'active' : '')}\n            aria-label=\"Format text to underlined\">\n            <i className=\"format underline\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'strikethrough')\n            }}\n            className={'popup-item spaced ' + (isStrikethrough ? 'active' : '')}\n            aria-label=\"Format text with a strikethrough\">\n            <i className=\"format strikethrough\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'subscript')\n            }}\n            className={'popup-item spaced ' + (isSubscript ? 'active' : '')}\n            title=\"Subscript\"\n            aria-label=\"Format Subscript\">\n            <i className=\"format subscript\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'superscript')\n            }}\n            className={'popup-item spaced ' + (isSuperscript ? 'active' : '')}\n            title=\"Superscript\"\n            aria-label=\"Format Superscript\">\n            <i className=\"format superscript\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'code')\n            }}\n            className={'popup-item spaced ' + (isCode ? 'active' : '')}\n            aria-label=\"Insert code block\">\n            <i className=\"format code\" />\n          </button>\n          <button\n            onClick={insertLink}\n            className={'popup-item spaced ' + (isLink ? 'active' : '')}\n            aria-label=\"Insert link\">\n            <i className=\"format link\" />\n          </button>\n        </>\n      )}\n      {/* <button\n        onClick={insertComment}\n        className={'popup-item spaced insert-comment'}\n        aria-label=\"Insert comment\">\n        <i className=\"format add-comment\" />\n      </button> */}\n    </div>\n  )\n}\n\nfunction useFloatingTextFormatToolbar(\n  editor,\n  anchorElem,\n) {\n  const [isText, setIsText] = useState(false)\n  const [isLink, setIsLink] = useState(false)\n  const [isBold, setIsBold] = useState(false)\n  const [isItalic, setIsItalic] = useState(false)\n  const [isUnderline, setIsUnderline] = useState(false)\n  const [isStrikethrough, setIsStrikethrough] = useState(false)\n  const [isSubscript, setIsSubscript] = useState(false)\n  const [isSuperscript, setIsSuperscript] = useState(false)\n  const [isCode, setIsCode] = useState(false)\n\n  const updatePopup = useCallback(() => {\n    editor.getEditorState().read(() => {\n      // Should not to pop up the floating toolbar when using IME input\n      if (editor.isComposing()) {\n        return\n      }\n      const selection = $getSelection()\n      const nativeSelection = window.getSelection()\n      const rootElement = editor.getRootElement()\n\n      if (\n        nativeSelection !== null &&\n        (!$isRangeSelection(selection) ||\n          rootElement === null ||\n          !rootElement.contains(nativeSelection.anchorNode))\n      ) {\n        setIsText(false)\n        return\n      }\n\n      if (!$isRangeSelection(selection)) {\n        return\n      }\n\n      const node = getSelectedNode(selection)\n\n      // Update text format\n      setIsBold(selection.hasFormat('bold'))\n      setIsItalic(selection.hasFormat('italic'))\n      setIsUnderline(selection.hasFormat('underline'))\n      setIsStrikethrough(selection.hasFormat('strikethrough'))\n      setIsSubscript(selection.hasFormat('subscript'))\n      setIsSuperscript(selection.hasFormat('superscript'))\n      setIsCode(selection.hasFormat('code'))\n\n      // Update links\n      const parent = node.getParent()\n      if ($isLinkNode(parent) || $isLinkNode(node)) {\n        setIsLink(true)\n      } else {\n        setIsLink(false)\n      }\n\n      if (\n        !$isCodeHighlightNode(selection.anchor.getNode()) &&\n        selection.getTextContent() !== ''\n      ) {\n        setIsText($isTextNode(node))\n      } else {\n        setIsText(false)\n      }\n\n      const rawTextContent = selection.getTextContent().replace(/\\n/g, '')\n      if (!selection.isCollapsed() && rawTextContent === '') {\n        setIsText(false)\n        return\n      }\n    })\n  }, [editor])\n\n  useEffect(() => {\n    document.addEventListener('selectionchange', updatePopup)\n    return () => {\n      document.removeEventListener('selectionchange', updatePopup)\n    }\n  }, [updatePopup])\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(() => {\n        updatePopup()\n      }),\n      editor.registerRootListener(() => {\n        if (editor.getRootElement() === null) {\n          setIsText(false)\n        }\n      }),\n    )\n  }, [editor, updatePopup])\n\n  if (!isText || isLink) {\n    return null\n  }\n\n  return createPortal(\n    <TextFormatFloatingToolbar\n      editor={editor}\n      anchorElem={anchorElem}\n      isLink={isLink}\n      isBold={isBold}\n      isItalic={isItalic}\n      isStrikethrough={isStrikethrough}\n      isSubscript={isSubscript}\n      isSuperscript={isSuperscript}\n      isUnderline={isUnderline}\n      isCode={isCode}\n    />,\n    anchorElem,\n  )\n}\n\nexport default function FloatingTextFormatToolbarPlugin({\n  anchorElem = document.body,\n}) {\n  const [editor] = useLexicalComposerContext()\n  return useFloatingTextFormatToolbar(editor, anchorElem)\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nexport function getDOMRangeRect(\n  nativeSelection,\n  rootElement\n) {\n  const domRange = nativeSelection.getRangeAt(0);\n\n  let rect;\n\n  if (nativeSelection.anchorNode === rootElement) {\n    let inner = rootElement;\n    while (inner.firstElementChild != null) {\n      inner = inner.firstElementChild;\n    }\n    rect = inner.getBoundingClientRect();\n  } else {\n    rect = domRange.getBoundingClientRect();\n  }\n\n  return rect;\n}\n","/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n  \r\n  import './InlineImageNode.css'\r\n  \r\n  import {AutoFocusPlugin} from '@lexical/react/LexicalAutoFocusPlugin'\r\n  import {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext'\r\n  import LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary'\r\n  import {LexicalNestedComposer} from '@lexical/react/LexicalNestedComposer'\r\n  import {RichTextPlugin} from '@lexical/react/LexicalRichTextPlugin'\r\n  import {useLexicalNodeSelection} from '@lexical/react/useLexicalNodeSelection'\r\n  import {mergeRegister} from '@lexical/utils'\r\n  \r\n  import {\r\n    $getNodeByKey,\r\n    $getSelection,\r\n    $isNodeSelection,\r\n    $setSelection,\r\n    CLICK_COMMAND,\r\n    COMMAND_PRIORITY_LOW,\r\n    DRAGSTART_COMMAND,\r\n    KEY_BACKSPACE_COMMAND,\r\n    KEY_DELETE_COMMAND,\r\n    KEY_ENTER_COMMAND,\r\n    KEY_ESCAPE_COMMAND,\r\n    SELECTION_CHANGE_COMMAND,\r\n  } from 'lexical'\r\n  import {Suspense, useCallback, useEffect, useRef, useState} from 'react'\r\n  \r\n  \r\n  import useModal from '../hooks/useModal'\r\n  import LinkPlugin from '../plugins/LinkPlugin'\r\n  import ContentEditable from '../ui/ContentEditable'\r\n  import Placeholder from '../ui/Placeholder'\r\n  import {$isInlineImageNode, InlineImageNode} from './InlineImageNode'\r\n  import TextInput from '../ui/TextInput'\r\n  import Select from '../ui/Select'\r\n  import { DialogActions } from '../ui/Dialog'\r\n  import Button from '../ui/Button'\r\n  import FloatingLinkEditorPlugin from '../plugins/FloatingLinkEditorPlugin/index'\r\n  import FloatingTextFormatToolbarPlugin from '../plugins/FloatingTextFormatToolbarPlugin/index'\r\n  \r\n  const imageCache = new Set()\r\n  \r\n  function useSuspenseImage(src) {\r\n    if (!imageCache.has(src)) {\r\n      throw new Promise((resolve) => {\r\n        const img = new Image()\r\n        img.src = src\r\n        img.onload = () => {\r\n          imageCache.add(src)\r\n          resolve(null)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  function LazyImage({\r\n    altText,\r\n    className,\r\n    imageRef,\r\n    src,\r\n    width,\r\n    height,\r\n    position,\r\n  }) {\r\n    useSuspenseImage(src)\r\n    return (\r\n      <img\r\n        className={className || undefined}\r\n        src={src}\r\n        alt={altText}\r\n        ref={imageRef}\r\n        data-position={position}\r\n        style={{\r\n          height,\r\n          width,\r\n          display: 'block',\r\n        }}\r\n        draggable=\"false\"\r\n      />\r\n    )\r\n  }\r\n  \r\n  export function UpdateInlineImageDialog({\r\n    activeEditor,\r\n    nodeKey,\r\n    onClose,\r\n  }) {\r\n    const editorState = activeEditor.getEditorState()\r\n    const node = editorState.read(() => $getNodeByKey(nodeKey))\r\n    const [altText, setAltText] = useState(node.getAltText())\r\n    const [showCaption, setShowCaption] = useState(node.getShowCaption())\r\n    const [position, setPosition] = useState(node.getPosition())\r\n  \r\n    const handleShowCaptionChange = (e) => {\r\n      setShowCaption(e.target.checked)\r\n    }\r\n  \r\n    const handlePositionChange = (e) => {\r\n      setPosition(e.target.value)\r\n    }\r\n  \r\n    const handleOnConfirm = () => {\r\n      const payload = {altText, showCaption, position}\r\n      if(node) {\r\n        activeEditor.update(() => { node.update(payload)} )\r\n      }\r\n      onClose()\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <div style={{marginBottom: '1em'}}>\r\n          <TextInput\r\n            label=\"Alt Text\"\r\n            placeholder=\"Descriptive alternative text\"\r\n            onChange={setAltText}\r\n            value={altText}\r\n            data-test-id=\"image-modal-alt-text-input\"\r\n          />\r\n        </div>\r\n  \r\n        <Select style={{marginBottom: '1em', width: '208px'}} value={position} label=\"Position\" name=\"position\" id=\"position-select\" onChange={handlePositionChange}>\r\n          <option value=\"left\">Left</option>\r\n          <option value=\"right\">Right</option>\r\n          <option value=\"full\">Full Width</option>\r\n        </Select>\r\n  \r\n        <div className=\"Input__wrapper\">\r\n          <input id=\"caption\" type=\"checkbox\" checked={showCaption} onChange={handleShowCaptionChange} />  \r\n          <label htmlFor=\"caption\">Show Caption</label>\r\n        </div>\r\n        \r\n        <DialogActions>\r\n          <Button\r\n            data-test-id=\"image-modal-file-upload-btn\"\r\n            onClick={() => handleOnConfirm()}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default function InlineImageComponent({\r\n    src,\r\n    altText,\r\n    nodeKey,\r\n    width,\r\n    height,\r\n    showCaption,\r\n    caption,\r\n    position,\r\n  }) {\r\n    const [modal, showModal] = useModal()\r\n    const imageRef = useRef(null)\r\n    const buttonRef = useRef(null)\r\n    const [isSelected, setSelected, clearSelection] =\r\n      useLexicalNodeSelection(nodeKey)\r\n    const [editor] = useLexicalComposerContext()\r\n    const [selection, setSelection] = useState(null)\r\n    const activeEditorRef = useRef(null)\r\n  \r\n    const onDelete = useCallback(\r\n      (payload) => {\r\n        if (isSelected && $isNodeSelection($getSelection())) {\r\n          const event = payload\r\n          event.preventDefault()\r\n          const node = $getNodeByKey(nodeKey)\r\n          if ($isInlineImageNode(node)) {\r\n            node?.remove()\r\n          }\r\n          setSelected(false)\r\n        }\r\n        return false\r\n      },\r\n      [isSelected, nodeKey, setSelected],\r\n    )\r\n  \r\n    const onEnter = useCallback(\r\n      (event) => {\r\n        const latestSelection = $getSelection()\r\n        const buttonElem = buttonRef.current\r\n        if (\r\n          isSelected &&\r\n          $isNodeSelection(latestSelection) &&\r\n          latestSelection.getNodes().length === 1\r\n        ) {\r\n          if (showCaption) {\r\n            // Move focus into nested editor\r\n            $setSelection(null)\r\n            event.preventDefault()\r\n            caption.focus()\r\n            return true\r\n          } else if (\r\n            buttonElem !== null &&\r\n            buttonElem !== document.activeElement\r\n          ) {\r\n            event.preventDefault()\r\n            buttonElem.focus()\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      },\r\n      [caption, isSelected, showCaption],\r\n    )\r\n  \r\n    const onEscape = useCallback(\r\n      (event) => {\r\n        if (\r\n          activeEditorRef.current === caption ||\r\n          buttonRef.current === event.target\r\n        ) {\r\n          $setSelection(null)\r\n          editor.update(() => {\r\n            setSelected(true)\r\n            const parentRootElement = editor.getRootElement()\r\n            if (parentRootElement !== null) {\r\n              parentRootElement.focus()\r\n            }\r\n          })\r\n          return true\r\n        }\r\n        return false\r\n      },\r\n      [caption, editor, setSelected],\r\n    )\r\n  \r\n    useEffect(() => {\r\n      let isMounted = true\r\n      const unregister = mergeRegister(\r\n        editor.registerUpdateListener(({editorState}) => {\r\n          if (isMounted) {\r\n            setSelection(editorState.read(() => $getSelection()))\r\n          }\r\n        }),\r\n        editor.registerCommand(\r\n          SELECTION_CHANGE_COMMAND,\r\n          (_, activeEditor) => {\r\n            activeEditorRef.current = activeEditor\r\n            return false\r\n          },\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n        editor.registerCommand(\r\n          CLICK_COMMAND,\r\n          (payload) => {\r\n            const event = payload\r\n            if (event.target === imageRef.current) {\r\n              if (event.shiftKey) {\r\n                setSelected(!isSelected)\r\n              } else {\r\n                clearSelection()\r\n                setSelected(true)\r\n              }\r\n              return true\r\n            }\r\n  \r\n            return false\r\n          },\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n        editor.registerCommand(\r\n          DRAGSTART_COMMAND,\r\n          (event) => {\r\n            if (event.target === imageRef.current) {\r\n              // TODO This is just a temporary workaround for FF to behave like other browsers.\r\n              // Ideally, this handles drag & drop too (and all browsers).\r\n              event.preventDefault()\r\n              return true\r\n            }\r\n            return false\r\n          },\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n        editor.registerCommand(\r\n          KEY_DELETE_COMMAND,\r\n          onDelete,\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n        editor.registerCommand(\r\n          KEY_BACKSPACE_COMMAND,\r\n          onDelete,\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n        editor.registerCommand(KEY_ENTER_COMMAND, onEnter, COMMAND_PRIORITY_LOW),\r\n        editor.registerCommand(\r\n          KEY_ESCAPE_COMMAND,\r\n          onEscape,\r\n          COMMAND_PRIORITY_LOW,\r\n        ),\r\n      )\r\n      return () => {\r\n        isMounted = false\r\n        unregister()\r\n      }\r\n    }, [\r\n      clearSelection,\r\n      editor,\r\n      isSelected,\r\n      nodeKey,\r\n      onDelete,\r\n      onEnter,\r\n      onEscape,\r\n      setSelected,\r\n    ])\r\n  \r\n    const draggable = isSelected && $isNodeSelection(selection)\r\n    const isFocused = isSelected\r\n    return (\r\n      <Suspense fallback={null}>\r\n        <>\r\n          <div draggable={draggable}>\r\n            <button\r\n              className=\"image-edit-button\"\r\n              ref={buttonRef}\r\n              onClick={() => {\r\n                showModal('Update Inline Image', (onClose) => (\r\n                  <UpdateInlineImageDialog\r\n                    activeEditor={editor}\r\n                    nodeKey={nodeKey}\r\n                    onClose={onClose}\r\n                  />\r\n                ))\r\n              }}>\r\n              Edit\r\n            </button>\r\n            <LazyImage\r\n              className={\r\n                isFocused\r\n                  ? `focused ${$isNodeSelection(selection) ? 'draggable' : ''}`\r\n                  : null\r\n              }\r\n              src={src}\r\n              altText={altText}\r\n              imageRef={imageRef}\r\n              width={width}\r\n              height={height}\r\n              position={position}\r\n            />\r\n          </div>\r\n          {showCaption && (\r\n            <div className=\"image-caption-container\">\r\n              <LexicalNestedComposer initialEditor={caption}>\r\n                <AutoFocusPlugin />\r\n                <LinkPlugin />\r\n                <FloatingLinkEditorPlugin/>\r\n                <FloatingTextFormatToolbarPlugin/>\r\n                <RichTextPlugin\r\n                  contentEditable={\r\n                    <ContentEditable className=\"InlineImageNode__contentEditable\" />\r\n                  }\r\n                  placeholder={\r\n                    <Placeholder className=\"InlineImageNode__placeholder\">\r\n                      Enter a caption...\r\n                    </Placeholder>\r\n                  }\r\n                  ErrorBoundary={LexicalErrorBoundary}\r\n                />\r\n              </LexicalNestedComposer>\r\n            </div>\r\n          )}\r\n        </>\r\n        {modal}\r\n      </Suspense>\r\n    )\r\n  }\r\n  ","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalAutoFocusPlugin = process.env.NODE_ENV === 'development' ? require('./LexicalAutoFocusPlugin.dev.js') : require('./LexicalAutoFocusPlugin.prod.js')\nmodule.exports = LexicalAutoFocusPlugin;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"@lexical/react/LexicalComposerContext\"),f=require(\"react\");exports.AutoFocusPlugin=function({defaultSelection:c}){let [a]=e.useLexicalComposerContext();f.useEffect(()=>{a.focus(()=>{let d=document.activeElement,b=a.getRootElement();null===b||null!==d&&b.contains(d)||b.focus({preventScroll:!0})},{defaultSelection:c})},[c,a]);return null}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalCollaborationContext = process.env.NODE_ENV === 'development' ? require('./LexicalCollaborationContext.dev.js') : require('./LexicalCollaborationContext.prod.js')\nmodule.exports = LexicalCollaborationContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"react\");\nlet c=[[\"Cat\",\"rgb(125, 50, 0)\"],[\"Dog\",\"rgb(100, 0, 0)\"],[\"Rabbit\",\"rgb(150, 0, 0)\"],[\"Frog\",\"rgb(200, 0, 0)\"],[\"Fox\",\"rgb(200, 75, 0)\"],[\"Hedgehog\",\"rgb(0, 75, 0)\"],[\"Pigeon\",\"rgb(0, 125, 0)\"],[\"Squirrel\",\"rgb(75, 100, 0)\"],[\"Bear\",\"rgb(125, 100, 0)\"],[\"Tiger\",\"rgb(0, 0, 150)\"],[\"Leopard\",\"rgb(0, 0, 200)\"],[\"Zebra\",\"rgb(0, 0, 250)\"],[\"Wolf\",\"rgb(0, 100, 150)\"],[\"Owl\",\"rgb(0, 100, 100)\"],[\"Gull\",\"rgb(100, 0, 100)\"],[\"Squid\",\"rgb(150, 0, 150)\"]],d=c[Math.floor(Math.random()*c.length)],e=b.createContext({clientID:0,\ncolor:d[1],isCollabActive:!1,name:d[0],yjsDocMap:new Map});exports.CollaborationContext=e;exports.useCollaborationContext=function(f,g){let a=b.useContext(e);null!=f&&(a.name=f);null!=g&&(a.color=g);return a}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalNestedComposer = process.env.NODE_ENV === 'development' ? require('./LexicalNestedComposer.dev.js') : require('./LexicalNestedComposer.prod.js')\nmodule.exports = LexicalNestedComposer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var d=require(\"@lexical/react/LexicalCollaborationContext\"),m=require(\"@lexical/react/LexicalComposerContext\"),r=require(\"react\");function t(a){let h=new URLSearchParams;h.append(\"code\",a);for(let e=1;e<arguments.length;e++)h.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${a}; visit https://lexical.dev/docs/error?${h} for the full message or `+\"use the non-minified dev environment for full errors and additional helpful warnings.\");}\nexports.LexicalNestedComposer=function({initialEditor:a,children:h,initialNodes:e,initialTheme:u,skipCollabChecks:v}){let q=r.useRef(!1),n=r.useContext(m.LexicalComposerContext);null==n&&t(9);let [f,{getTheme:w}]=n,y=r.useMemo(()=>{var b=u||w()||void 0;const x=m.createLexicalComposerContext(n,b);void 0!==b&&(a._config.theme=b);a._parentEditor=f;if(e)for(var c of e){var g=b=null;\"function\"!==typeof c&&(g=c,c=g.replace,b=g.with,g=g.withKlass||null);const k=a._nodes.get(c.getType());a._nodes.set(c.getType(),\n{exportDOM:k?k.exportDOM:void 0,klass:c,replace:b,replaceWithKlass:g,transforms:new Set})}else{c=a._nodes=new Map(f._nodes);for(const [k,l]of c)a._nodes.set(k,{exportDOM:l.exportDOM,klass:l.klass,replace:l.replace,replaceWithKlass:l.replaceWithKlass,transforms:new Set})}a._config.namespace=f._config.namespace;a._editable=f._editable;return[a,x]},[]),{isCollabActive:z,yjsDocMap:A}=d.useCollaborationContext(),p=v||q.current||A.has(a.getKey());r.useEffect(()=>{p&&(q.current=!0)},[p]);r.useEffect(()=>\nf.registerEditableListener(b=>{a.setEditable(b)}),[a,f]);return r.createElement(m.LexicalComposerContext.Provider,{value:y},!z||p?h:null)}\n"],"names":["VERTICAL_GAP","HORIZONTAL_OFFSET","TextFormatFloatingToolbar","_ref","editor","anchorElem","isLink","isBold","isItalic","isUnderline","isCode","isStrikethrough","isSubscript","isSuperscript","popupCharStylesEditorRef","useRef","insertLink","useCallback","dispatchCommand","TOGGLE_LINK_COMMAND","initialPosition","x","y","mouseDownListener","e","clientX","clientY","mouseMoveListener","current","buttons","Math","sqrt","pow","style","pointerEvents","mouseUpListener","useEffect","document","addEventListener","removeEventListener","updateTextFormatFloatingToolbar","selection","$getSelection","popupCharStylesEditorElem","nativeSelection","window","getSelection","rootElement","getRootElement","isCollapsed","contains","anchorNode","rangeRect","domRange","getRangeAt","rect","inner","firstElementChild","getBoundingClientRect","getDOMRangeRect","targetRect","floatingElem","verticalGap","arguments","length","undefined","horizontalOffset","scrollerElem","parentElement","opacity","transform","floatingElemRect","anchorElementRect","editorScrollerRect","top","height","left","width","right","concat","setFloatingElemPosition","update","getEditorState","read","mergeRegister","registerUpdateListener","_ref2","editorState","registerCommand","SELECTION_CHANGE_COMMAND","COMMAND_PRIORITY_LOW","_jsx","ref","className","children","isEditable","_jsxs","_Fragment","onClick","FORMAT_TEXT_COMMAND","title","FloatingTextFormatToolbarPlugin","_ref3","body","useLexicalComposerContext","isText","setIsText","useState","setIsLink","setIsBold","setIsItalic","setIsUnderline","setIsStrikethrough","setIsSubscript","setIsSuperscript","setIsCode","updatePopup","isComposing","$isRangeSelection","node","getSelectedNode","hasFormat","parent","getParent","$isLinkNode","$isCodeHighlightNode","anchor","getNode","getTextContent","$isTextNode","rawTextContent","replace","registerRootListener","createPortal","useFloatingTextFormatToolbar","imageCache","Set","LazyImage","altText","imageRef","src","position","has","Promise","resolve","img","Image","onload","add","useSuspenseImage","alt","display","draggable","UpdateInlineImageDialog","activeEditor","nodeKey","onClose","$getNodeByKey","setAltText","getAltText","showCaption","setShowCaption","getShowCaption","setPosition","getPosition","marginBottom","TextInput","label","placeholder","onChange","value","Select","name","id","target","type","checked","htmlFor","DialogActions","Button","handleOnConfirm","payload","InlineImageComponent","caption","modal","showModal","useModal","buttonRef","isSelected","setSelected","clearSelection","useLexicalNodeSelection","setSelection","activeEditorRef","onDelete","$isNodeSelection","preventDefault","$isInlineImageNode","remove","onEnter","event","latestSelection","buttonElem","getNodes","$setSelection","focus","activeElement","onEscape","parentRootElement","isMounted","unregister","_ref4","_","CLICK_COMMAND","shiftKey","DRAGSTART_COMMAND","KEY_DELETE_COMMAND","KEY_BACKSPACE_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","isFocused","Suspense","fallback","LexicalNestedComposer","initialEditor","AutoFocusPlugin","LinkPlugin","FloatingLinkEditorPlugin","RichTextPlugin","contentEditable","ContentEditable","Placeholder","ErrorBoundary","LexicalErrorBoundary","LexicalAutoFocusPlugin","require","module","exports","f","defaultSelection","c","a","d","b","preventScroll","LexicalCollaborationContext","floor","random","createContext","clientID","color","isCollabActive","yjsDocMap","Map","CollaborationContext","useCollaborationContext","g","useContext","m","r","h","initialNodes","initialTheme","u","skipCollabChecks","v","q","n","LexicalComposerContext","URLSearchParams","append","Error","t","getTheme","w","useMemo","createLexicalComposerContext","_config","theme","_parentEditor","with","withKlass","k","_nodes","get","getType","set","exportDOM","klass","replaceWithKlass","transforms","l","namespace","_editable","z","A","p","getKey","registerEditableListener","setEditable","createElement","Provider"],"sourceRoot":""}